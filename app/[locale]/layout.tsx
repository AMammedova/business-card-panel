import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { getMessages } from "next-intl/server";
import { ToastContainer } from "react-toastify";
import { NextIntlClientProvider } from "next-intl";
import { Suspense } from "react";
import Loading from "@/shared/components/Loading";
import ReactQueryProvider from "@/provider/QueryClientProvider";

const geistSans = localFont({
  src: "../fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "../fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params,
}: Readonly<{
  children: React.ReactNode;
  params: Promise<{ locale: string }>;
}>) {
  const { locale } = await params;
  const messages = await getMessages();
  return (
    <html lang={locale}>
      <body
        suppressHydrationWarning={true}
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        
        <div className="dark:bg-boxdark-2 dark:text-bodydark">
          <ToastContainer
            position="top-right"
            autoClose={3000}
            hideProgressBar={false}
            newestOnTop={true}
            closeOnClick
            rtl={false}
            pauseOnFocusLoss
            draggable
            pauseOnHover
            theme="light"
            toastStyle={{
              fontSize: "14px",
              fontWeight: 500,
              padding: "12px",
              borderRadius: "8px",
              boxShadow: "0px 2px 10px rgba(0,0,0,0.1)",
              justifyContent: "inherit",
            }}
          />

          <NextIntlClientProvider locale={locale} messages={messages}>
            <ReactQueryProvider>
              <Suspense fallback={<Loading />}>{children}</Suspense>
            </ReactQueryProvider>
          </NextIntlClientProvider>
        </div>
      </body>
    </html>
  );
}
